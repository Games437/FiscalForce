"use client"; // ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô Next.js ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ù‡∏±‡πà‡∏á Client
import { useState } from "react";

/* ---------- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ---------- */
interface Result {
  monthlyPayment: number; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
  totalDeposit: number;   // ‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏≠‡∏°
  totalInterest: number;  // ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
  targetAmount: number;   // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
}

/* ---------- ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏´‡∏•‡∏±‡∏Å ---------- */
export default function GSBSavingCalculator() {
  /* ---------- ‡∏™‡∏£‡πâ‡∏≤‡∏á state ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å input ---------- */
  const [targetAmount, setTargetAmount] = useState<string>(""); // ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ
  const [years, setYears] = useState<string>("");               // ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ (‡∏õ‡∏µ)
  const [interestRate, setInterestRate] = useState<string>(""); // ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ï‡πà‡∏≠‡∏õ‡∏µ
  const [initialAmount, setInitialAmount] = useState<string>(""); // ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
  const [result, setResult] = useState<Result | null>(null);     // ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì

  /* ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÄ‡∏ä‡πà‡∏ô ‡πÉ‡∏™‡πà‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ , ---------- */
  const formatNumber = (value: string) => {
    const num = value.replace(/,/g, ""); // ‡∏•‡∏ö , ‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô
    if (num === "" || isNaN(Number(num))) return "";
    return Number(num).toLocaleString("en-US"); // ‡πÉ‡∏™‡πà , ‡∏ó‡∏∏‡∏Å‡∏´‡∏•‡∏±‡∏Å‡∏û‡∏±‡∏ô
  };

  /* ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ---------- */
  const parseNumber = (value: string) => Number(value.replace(/,/g, "")) || 0;

  /* ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏° ---------- */
  const handleCalculate = () => {
    // ‡πÅ‡∏õ‡∏•‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å input ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
    const targetVal = parseNumber(targetAmount);
    const yearsVal = parseNumber(years);
    const rateVal = parseNumber(interestRate);
    const initialVal = parseNumber(initialAmount);

    const months = yearsVal * 12; // ‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
    const monthlyRate = rateVal / 100 / 12; // ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏≤‡∏Å‡∏Å‡∏£‡∏≠‡∏Å‡∏õ‡∏µ <= 0 ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
    if (months <= 0) {
      setResult(null);
      return;
    }

    // ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏Ç‡∏≠‡∏á‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ó‡∏ö‡∏ï‡πâ‡∏ô)
    const futureValueOfInitial = initialVal * Math.pow(1 + monthlyRate, months);

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏°‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
    const remainingAmount = targetVal - futureValueOfInitial;

    let monthlyPayment = 0;

    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢
    if (monthlyRate > 0) {
      // ‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏ù‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡πÅ‡∏ö‡∏ö‡∏≠‡∏ô‡∏∏‡∏Å‡∏£‡∏° (Future Value of Annuity)
      monthlyPayment =
        remainingAmount /
        ((Math.pow(1 + monthlyRate, months) - 1) / monthlyRate);
    } else {
      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡πÄ‡∏•‡∏¢
      monthlyPayment = remainingAmount / months;
    }

    // ‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏ù‡∏≤‡∏Å‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    const totalDeposit = initialVal + monthlyPayment * months;

    // ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö = ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ - ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏≤‡∏Å‡∏à‡∏£‡∏¥‡∏á
    const totalInterest = targetVal - totalDeposit;

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÉ‡∏ô state
    setResult({
      monthlyPayment,
      totalDeposit,
      totalInterest,
      targetAmount: targetVal,
    });
  };

  /* ---------- ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ---------- */
  const handleClear = () => {
    setTargetAmount("");
    setYears("");
    setInterestRate("");
    setInitialAmount("");
    setResult(null);
  };

  /* ---------- ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• UI ---------- */
  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 via-gray-100 to-gray-200 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-4xl mx-auto">
        {/* ---------- ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß ---------- */}
        <div className="text-center mb-10">
          <div
            className="inline-flex items-center justify-center w-20 h-20 rounded-full mb-4 shadow-lg"
            style={{
              background: "linear-gradient(135deg, #1f2937 0%, #111827 100%)",
            }}
          >
            <span className="text-4xl">üí∞</span>
          </div>
          <h1 className="text-4xl font-bold mb-3 bg-gradient-to-r from-gray-700 to-gray-900 bg-clip-text text-transparent">
            ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°
          </h1>
          <p className="text-gray-600 font-normal text-lg">Government Savings</p>
        </div>

        {/* ---------- ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏° ---------- */}
        <div className="bg-white/80 backdrop-blur-sm rounded-2xl shadow-2xl p-8 border-2 border-white">

          {/* ---------- ‡∏™‡πà‡∏ß‡∏ô‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ---------- */}
          <div className="mb-10">
            <h2 className="text-2xl font-bold mb-6 text-gray-800">
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏°
            </h2>

            <div className="grid gap-5">
              {/* ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ */}
              <div>
                <label className="block font-semibold mb-2">
                  ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ (‡∏ö‡∏≤‡∏ó)
                </label>
                <input
                  type="text"
                  value={targetAmount}
                  onChange={(e) => setTargetAmount(formatNumber(e.target.value))}
                  className="w-full rounded-lg p-3 border-2"
                  placeholder="0"
                />
              </div>

              {/* ‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ */}
              <div className="grid md:grid-cols-2 gap-5">
                <div>
                  <label className="block font-semibold mb-2">
                    ‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏° (‡∏õ‡∏µ)
                  </label>
                  <input
                    type="text"
                    value={years}
                    onChange={(e) => setYears(formatNumber(e.target.value))}
                    className="w-full rounded-lg p-3 border-2"
                    placeholder="0"
                  />
                </div>

                <div>
                  <label className="block font-semibold mb-2">
                    ‡∏≠‡∏±‡∏ï‡∏£‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ (% ‡∏ï‡πà‡∏≠‡∏õ‡∏µ)
                  </label>
                  <input
                    type="text"
                    value={interestRate}
                    onChange={(e) =>
                      setInterestRate(formatNumber(e.target.value))
                    }
                    className="w-full rounded-lg p-3 border-2"
                    placeholder="0"
                  />
                </div>
              </div>

              {/* ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô */}
              <div>
                <label className="block font-semibold mb-2">
                  ‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡∏ö‡∏≤‡∏ó)
                </label>
                <input
                  type="text"
                  value={initialAmount}
                  onChange={(e) =>
                    setInitialAmount(formatNumber(e.target.value))
                  }
                  className="w-full rounded-lg p-3 border-2"
                  placeholder="0"
                />
              </div>
            </div>

            {/* ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì / ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
            <div className="grid md:grid-cols-2 gap-4 mt-6">
              <button
                onClick={handleCalculate}
                className="p-3 font-bold text-white rounded-lg bg-gray-800 hover:bg-gray-900 transition-all"
              >
                ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
              </button>

              <button
                onClick={handleClear}
                className="p-3 font-bold rounded-lg border-2 hover:bg-gray-50 transition-all"
              >
                ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </button>
            </div>
          </div>

          {/* ---------- ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå ---------- */}
          {result && (
            <div className="pt-8 border-t-2 border-gray-200">
              <h2 className="text-2xl font-bold mb-6 text-gray-800">
                ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
              </h2>

              {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏´‡∏•‡∏±‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô */}
              <div className="rounded-xl p-6 text-white text-center mb-5 shadow-lg bg-gradient-to-br from-gray-700 to-gray-900">
                <p className="text-sm mb-2 opacity-90">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏≠‡∏°</p>
                <p className="text-4xl font-bold">
                  {Math.ceil(result.monthlyPayment).toLocaleString()} ‡∏ö‡∏≤‡∏ó
                </p>
                <p className="text-sm opacity-90 mt-2">‡∏ï‡πà‡∏≠‡πÄ‡∏î‡∏∑‡∏≠‡∏ô</p>
              </div>

              {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÅ‡∏¢‡∏Å */}
              <div className="space-y-3 mb-6">
                <div className="flex justify-between p-4 rounded-xl border-2 bg-gray-50">
                  <span>‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ù‡∏≤‡∏Å‡∏™‡∏∞‡∏™‡∏°</span>
                  <span>{Math.ceil(result.totalDeposit).toLocaleString()} ‡∏ö‡∏≤‡∏ó</span>
                </div>

                <div className="flex justify-between p-4 rounded-xl border-2 bg-gray-50">
                  <span>‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö</span>
                  <span>+{Math.ceil(result.totalInterest).toLocaleString()} ‡∏ö‡∏≤‡∏ó</span>
                </div>

                <div className="flex justify-between p-5 rounded-xl border-2 bg-gray-100 font-bold">
                  <span>‡πÄ‡∏á‡∏¥‡∏ô‡∏≠‡∏≠‡∏°‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                  <span>{result.targetAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó</span>
                </div>
              </div>

              {/* ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ */}
              <div className="p-4 bg-yellow-50 rounded-xl border-l-4 border-yellow-400">
                üí° ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì‡∏Å‡∏≤‡∏£‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
              </div>
            </div>
          )}
        </div>

        {/* ---------- ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡πâ‡∏≤‡∏¢ ---------- */}
        <div className="mt-6 text-center text-sm text-gray-500">
          üí∞ ‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏ó‡∏µ‡πà‡∏°‡∏±‡πà‡∏ô‡∏Ñ‡∏á
        </div>
      </div>
    </div>
  );
}
